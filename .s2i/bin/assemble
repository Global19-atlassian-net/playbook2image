#!/bin/bash -e
#
# S2I assemble script for the 'playbook2image' image.
# The 'assemble' script builds your application source so that it is ready to run.
#
# For more information refer to the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#

if [[ "$1" == "-h" ]]; then
	# If the 'playbook2image' assemble script is executed with '-h' flag,
	# print the usage.
	exec /usr/libexec/s2i/usage
fi

# Restore artifacts from the previous build (if they exist).
#
if [ "$(ls /tmp/artifacts/ 2>/dev/null)" ]; then
  echo "---> Restoring build artifacts..."
  mv /tmp/artifacts/. ./
fi

echo "---> Installing application source..."
cp -Rf /tmp/src/. ./

echo "---> Building application from source..."
if [[ -v PYTHON_REQUIREMENTS ]]; then
  pip install -r ${PYTHON_REQUIREMENTS}
elif [[ -e requirements.txt ]]; then
  pip install --user -r requirements.txt
fi

if [[ -v INSTALL_OC ]]; then
  pip install --user requests
  echo "---> Installing 'oc' binary..."
  mkdir tmp
  cd tmp
  OC_BINARY_URL=$(python -c "import requests;releases = requests.get('https://api.github.com/repos/openshift/origin/releases').json();print [s for s in [r for r in releases if not r['prerelease'] and '1.4' in r['name']][0]['assets'] if 'linux-64' in s['browser_download_url']][0]['browser_download_url']")
  curl -L ${OC_BINARY_URL} -o openshift-client.tar.gz
  OC_PATH=`tar -tzf openshift-client.tar.gz |grep oc`
  tar -xzf openshift-client.tar.gz ${OC_PATH}
  cp ${OC_PATH} ${APP_ROOT}/bin/oc
  cd ..
  rm -rf tmp/
fi

