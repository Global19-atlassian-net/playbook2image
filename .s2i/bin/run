#!/bin/bash -e
#
# S2I run script for the 'playbook2image' image.
# The run script executes the server that runs your application.
#
# For more information see the documentation:
#	https://github.com/openshift/source-to-image/blob/master/docs/builder_image.md
#


# SOURCE and HOME DIRECTORY: /opt/app-root/src

#set -x
USER_ID=$(id -u)
GROUP_ID=$(id -g)
sed "s@${USER_NAME}:x:\${USER_ID}:\${GROUP_ID}@${USER_NAME}:x:${USER_ID}:${GROUP_ID}@g" ${APP_ROOT}/etc/passwd.template > /etc/passwd

INVENTORY="tmp_inventory"
INVENTORY_ARG="-i ${INVENTORY}"
if [[ -v INVENTORY_FILE ]]; then
  cp ${INVENTORY_FILE} ${INVENTORY}
elif [[ -v INVENTORY_URL ]]; then
  curl -o ${INVENTORY} ${INVENTORY_URL}
elif [[ -v DYNAMIC_SCRIPT_URL ]]; then
  curl -o ${INVENTORY} ${DYNAMIC_SCRIPT_URL}
  chmod 755 ${INVENTORY}
fi

if [[ "$ALLOW_ANSIBLE_CONNECTION_LOCAL" = false ]]; then
  sed -i s/ansible_connection=local// ${INVENTORY}
fi

if [[ -v VAULT_PASS ]]; then
  VAULT_PASS_FILE=.vaultpass
  echo ${VAULT_PASS} > ${VAULT_PASS_FILE}
  VAULT_PASS_ARG="--vault-password-file ${VAULT_PASS_FILE}"
fi

ansible-playbook ${INVENTORY_ARG} ${VAULT_PASS_ARG} ${OPTS} ${PLAYBOOK_FILE}
#set +x
